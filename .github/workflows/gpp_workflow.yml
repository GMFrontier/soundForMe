name: Android Alpha Release

'on':
  workflow_dispatch: null
#- name: Make gradlew executable
#        run: chmod +x ./gradlew
jobs:
  build:
    name: Job 1 - Build Signed AAB
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # obtener repo
        with:
          fetch-depth: 0

      - name: Set up JDK 17 # setup java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
     
      
      - name: Setup Gradle Cache # setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.10.2"
          gradle-home-cache-cleanup: true
          #cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Configure Keystore # generar el ketsore file y preparar app signing
        run: |
          echo '${{ secrets.STORE_FILE }}'> soundForMeAppKey.jks.asc
          gpg -d --passphrase '${{ secrets.KEYSTORE_PASSPHRASE }}' --batch soundForMeAppKey.jks.asc > androidApp/soundForMeAppKey.jks
          echo "storeFile=release.keystore" >> keystore.properties
          echo "keyAlias=$KEY_ALIAS" >> keystore.properties
          echo "storePassword=$STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEY_PASSWORD" >> keystore.properties

      - name: Create Google Play Config file # json con permiso para publicar en play store
        run: |
          echo "$PLAY_CONFIG_JSON" > play_config.json.b64
          base64 -d -i play_config.json.b64 > pc-api-8834478387068594456-862-5ce7d6e080ae.json 

      - name: Distribute app # publicar app en el open track (seteado en gradle kts)
        run: ./gradlew :androidApp:bundleRelease :androidApp:publishBundle


      - name: Build prodRelease
        run: ./gradlew bundleRelease
      - name: Sign AAb
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: '${{ secrets.STORE_FILE }}'
          alias: '${{ secrets.KEY_ALIAS }}'
          keyStorePassword: '${{ secrets.STORE_PASSWORD }}'
          keyPassword: '${{ secrets.KEY_PASSWORD }}'
      - name: Upload app bundle as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-bundle
          path: app/build/outputs/bundle/release/app-release.aab
      - run: 'echo Build status report=${{ job.status }}'
  deploy:
    name: Job_2 - Deploy aab to playstore
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download app bundle from artifact
        uses: actions/download-artifact@v2
        with:
          name: app-bundle
      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: '${{ secrets.SERVICE_ACCOUNT_JSON }}'
          packageName: com.uxstate.countriespad
          releaseFiles: '${{ github.workspace }}/app-release.aab'
          track: internal
  set_variables:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          gh variable set VERSION_CODE --body "$((VERSION_CODE+1))"
          gh variable set VERSION_NAME_3 --body "$((VERSION_NAME_3+1))"

        env:
          GH_TOKEN: '${{ secrets.PAT }}'
          VERSION_CODE: '${{ vars.VERSION_CODE}}'
          VERSION_NAME_3: '${{ vars.VERSION_NAME_3 }}'
